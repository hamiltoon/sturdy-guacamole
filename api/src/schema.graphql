

scalar Date

query findUser($userId: ID!) {
  user(id: $userId) {
    ...UserFields
  }
}

fragment UserFields on User {
  id
  username
}

schema {
  query: Query
}

type Query {
  me: User!
  user(id: ID!): User
  allUsers: [User]
  allNodes: [DataNode]
  search(term: String!): [SearchResult!]!
}

enum DataNodeType {
  USER,
  ADMIN,
}

interface Node {
  id: ID!
}

union SearchResult = User | DataNode

type User implements Node {
  id: ID!
  username: String!
  email: String!
  
}

type DataNode implements Node {
  id: ID!
  dataNodeType: DataNodeType!
  linked: [DataNode] @relationship(type: "LINKED", direction: OUT)
}
